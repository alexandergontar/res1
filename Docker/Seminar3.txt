https://www.docker.com/products/docker-desktop.

20:03
sudo apt update
sudo apt install apt-transport-https ca-certificates curl software-properties-common

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

20:04
echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

20:04
sudo apt update

20:04
sudo apt install docker-ce docker-ce-cli containerd.io

20:04
sudo docker run hello-world

20:04
https://www.docker.com/products/docker-desktop.
========================================================
docker run -it ubuntu:22.10 bash

====================================
docker run -it ubuntu:22.10 bash
docker: permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post "http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/create": dial unix /var/run/docker.sock: connect: permission denied.
See 'docker run --help'.
===============================
docker ps -a

docker run ubuntu bash
docker images
exit - exit from container
=================================
docker start <id>


docker exec -it <name of container> bash

docker start gb-test

docker run -it -h GB --name gb-test ubuntu:22.10

========================================
docker run: Создать и запустить контейнер из образа.
Пример: docker run ubuntu:latest

docker ps: Показать запущенные контейнеры.
Пример: docker ps

docker images: Показать список загруженных образов.
Пример: docker images

docker pull: Загрузить образ с Docker Hub или другого репозитория.
Пример: docker pull nginx

docker stop: Остановить запущенный контейнер.
Пример: docker stop <container_id>

docker start: Запустить ранее остановленный контейнер.
Пример: docker start <container_id>

docker restart: Перезапустить контейнер.
Пример: docker restart <container_id>

docker rm: Удалить контейнер.
Пример: docker rm <container_id>

docker rmi: Удалить образ.
Пример: docker rmi <image_id>

docker exec: Выполнить команду внутри работающего контейнера.
Пример: docker exec -it <container_id> bash
========================================================
docker rm $(docker ps -a -q)
docker rm $(docker ps -a -q) --force



docker run -it -h GB --name gb-test ubuntu:22.10
========================================= in a container
root@GB:/# mkdir /example

root@GB:/# touch /example/passwords.txt

root@GB:/# echo "123test" >> /example/passwords.txt

root@GB:/# cat /example/passwords.txt
echo "123test" >> /example/passwords.txt
==============================================
rm -rf /test

21:04
mkdir /test/

21:04
mkdir /test/folder

docker run -it -h GB --name gb-test -v /test/folder:/otherway ubuntu:22.10

docker rm $(docker ps -a -q) --force     -romove all containers


=============================================
docker run -it -h GB --name gb-test -v /test/folder:/otherway ubuntu:22.10
docker run -it -h GB --name gb-test -v /test/folder:/otherway ubuntu:22.10
============================================================================
docker run -it -h GB --name gb-test2 -v /test/folder:/test ubuntu:22.10



root@db-linux:/#
root@db-linux:/# mkdir /host_test
root@db-linux:/# docker run -it -h GB --name gb-test3 -v /host_test:/cont_test ubuntu:22.10
Unable to find image 'ubuntu:22.10' locally
22.10: Pulling from library/ubuntu
3ad6ea492c35: Pull complete
Digest: sha256:e322f4808315c387868a9135beeb11435b5b83130a8599fd7d0014452c34f489
Status: Downloaded newer image for ubuntu:22.10
root@GB:/#
root@GB:/#
root@GB:/#
root@GB:/#
root@GB:/#
root@GB:/# ls
bin  boot  cont_test  dev  etc  home  lib  lib32  lib64  libx32  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@GB:/#
root@GB:/#
root@GB:/#
root@GB:/#
root@GB:/#
root@GB:/# cd cont_test/
root@GB:/cont_test# ls
root@GB:/cont_test#
root@GB:/cont_test#
root@GB:/cont_test#
root@GB:/cont_test# touch password.txt
root@GB:/cont_test# echo 'qwerty' >> password.txt
root@GB:/cont_test#
root@GB:/cont_test#
root@GB:/cont_test#
root@GB:/cont_test#
root@GB:/cont_test# cat password.txt
qwerty
root@GB:/cont_test#
root@GB:/cont_test#
root@GB:/cont_test#
root@GB:/cont_test#
root@GB:/cont_test#
root@GB:/cont_test#
root@GB:/cont_test# exit
exit
root@db-linux:/# cd host_test/
root@db-linux:/host_test#
root@db-linux:/host_test# ls
password.txt
root@db-linux:/host_test# cat password.txt
qwerty
root@db-linux:/host_test#
root@db-linux:/host_test#
root@db-linux:/host_test#
root@db-linux:/host_test#
=============================================
docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:8.0.31
docker run --name myphp -d --link some-mysql:db -p 8081:80 phpmyadmin/phpmyadmin

docker run --name myphp -d --link some-mysql:db -p 8081:80 phpmyadmin/phpmyadmin





